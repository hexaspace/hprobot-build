{"version":3,"sources":["assets/simbol.png","component/User/Login.js","component/User/User.js","component/User/Authorized.js","component/Map/MapPresenter.js","component/Call/CallRobotItem.js","component/Call/CallController.js","component/Call/CallPresenter.js","component/Setting/SettingPresenter.js","component/History/HistoryPresenter.js","component/Pickup/PickupItem.js","component/Pickup/PickupPresenter.js","component/SideNav/SideNavPresenter.js","App.js","index.js"],"names":["Login","dumpUsers","id","password","mapId","userName","useState","inputId","setInputId","inputPassword","setInputPassword","className","htmlFor","type","name","value","onChange","e","target","onClick","user","pw","find","undefined","checkLogin","alert","sessionStorage","setItem","document","location","href","User","onLogout","window","removeItem","userId","getItem","src","require","default","alt","this","bind","Component","Authorized","goLogin","MapPresenter","RobotStatus","robot","used","CallRobotItem","robotStatus","map","getBackRobot","props","a","mapName","calledMapName","robotId","calledRobot","axios","get","response","console","log","error","status","robotHome","data","robot_home","buttonError","postButton","message","getCallRobot","robot_id","userNode","user_node","map_name","params","method","url","caller_name","defaults","baseURL","headers","post","CallPresenter","toggle","isCall","state","count","change","setState","prevState","countRobot","SettingPresenter","HistoryPresenter","PickupContent","pickup","isNull","phone","store","delivery","delay","PickupItem","pickupList","pickupItem","PickupPresenter","SideNavPresenter","isAuthorized","path","menu","idx","to","activeClassName","App","setIsAuthorized","useEffect","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51a38713.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/simbol.2f72507c.png\";","import React, {useState} from 'react'\r\nimport './../../assets/style.css';\r\n\r\n\r\n\r\nfunction Login() {\r\n    // 테스트용 user 정보\r\n    const dumpUsers = [\r\n        { id: \"hello\", password: \"world\", mapId:7, userName:\"store21\"},\r\n        { id: \"admin\", password: \"1234\", mapId:7, userName:\"store14\"},\r\n        { id: \"a\", password: \"s\", mapId:7, userName:\"store17\"}\r\n    ];\r\n    const checkLogin = (id, pw) => {\r\n        const user = dumpUsers.find(\r\n            (user) => user.id === id && user.password === pw\r\n        );\r\n        if (user === undefined) {\r\n            // alert('user undefined.'+id)\r\n            return null;}\r\n        return user;\r\n    }\r\n    // 아이디, 패스워드 입력값 변수. 초기는 null\r\n    const [inputId, setInputId] = useState(\"\");\r\n    const [inputPassword, setInputPassword] = useState(\"\");\r\n\r\n    // input에 입력시 변수 갱신\r\n    const handleInputId = (e) => {\r\n        setInputId(e.target.value)\r\n    }\r\n\r\n    const handleInputPassword = (e) => {\r\n        setInputPassword(e.target.value)\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        const user = checkLogin(inputId, inputPassword);\r\n        if (user === null){\r\n            alert('입력하신 정보가 올바르지 않습니다.')\r\n        } else {\r\n            \r\n            sessionStorage.setItem('userId', inputId)\r\n            sessionStorage.setItem('mapId', user.mapId)\r\n            sessionStorage.setItem('userName', user.userName)\r\n            \r\n\r\n        }\r\n        // 작업 완료 되면 페이지 이동(새로고침)\r\n        document.location.href = '/'\r\n    }\r\n    \r\n    return (\r\n        <div className=\"content\" id=\"login\">\r\n            <h1 > 로그인</h1>\r\n            <div className=\"grid-container\">\r\n                <div className=\"grid-item\" id=\"item-form\">\r\n                        <label htmlFor='input_id'>아이디</label>\r\n                        <br/>\r\n                        {/* 한줄씩 하려고 br 태그 사용함. 나중에 부트스트랩 사용으로 간편하게 고칠예정 develop */}\r\n                        <input type='text' name='input_id' value={inputId} onChange={handleInputId}  />\r\n                        {/* <div><input type='id' id=\"id\"/></div> value를 지정안해서 입력 그대로 보임. 갱신상황과 상관없음 */}\r\n                        <br/> <br/>\r\n                        <label htmlFor='input_pw'>비밀번호</label> \r\n                        <br/>\r\n                        <input type='password' name='input_pw' value={inputPassword} onChange={handleInputPassword} />\r\n                        <br/> <br/>\r\n                        <button onClick={onSubmit}>로그인</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react'\r\n\r\nexport class User extends Component {\r\n    onLogout = () => {\r\n        window.sessionStorage.removeItem('userId');\r\n        window.sessionStorage.removeItem('mapId');\r\n\r\n        document.location.href = '/'\r\n\r\n    }\r\n    render() {\r\n        const userId = sessionStorage.getItem('userId')\r\n\r\n        return (\r\n            <div className=\"content\" id=\"user\">\r\n                <h1 > 내 정보</h1>\r\n                <div className=\"grid-container\">\r\n                    <div className=\"grid-item\" id=\"item-profile\">\r\n                        <h4>프로필</h4>\r\n                {/* userid로 user 정보와 img url 불러오기 */}\r\n\r\n                        <img src={require(\"../../assets/simbol.png\").default} alt=\"logo\" />\r\n                        <div> 배달쿡 오산점 맥도날드 {userId}</div>\r\n                        <button onClick={this.onLogout.bind(this)}>로그아웃</button>\r\n                    </div>\r\n                    <div className=\"grid-item\" id=\"item-2\">\r\n                        <h4>호출 통계</h4>\r\n                    </div>\r\n                    <div className=\"grid-item\" id=\"item-3\">\r\n                        <h4>최근 주문</h4>\r\n                    </div>\r\n                    <div className=\"grid-item\" id=\"item-4\">\r\n                        <h4>뭐할까</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User\r\n","import React, { Component } from 'react'\r\n\r\nexport class Authorized extends Component {\r\n    goLogin = () => {\r\n\r\n\r\n        document.location.href = '/login'\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"content authorized\">\r\n                <h1>권한이 필요합니다.</h1>\r\n                <div className=\"grid-container\">\r\n                    <div className=\"grid-item\">\r\n                    <h4>로그아웃 상태입니다. 로그인 후 다시 접속해주세요.</h4>\r\n                    <button onClick={this.goLogin.bind(this)}>로그인하러 가기</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Authorized\r\n","import React, { Component } from 'react'\r\n\r\nexport class MapPresenter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"content\" id =\"map\">\r\n                <h1 > 실시간 로봇위치</h1>\r\n                <div className=\"grid-container\">\r\n                    <div className=\"grid-item\" id=\"item-map\">\r\n                    실시간 로봇위치 페이지입니다\r\n                    </div>\r\n                    <div className=\"grid-item\" id=\"item-status\">\r\n                    <h4> status</h4>qd\r\n                    </div>\r\n                    <div className=\"grid-item\" id=\"item-live\">\r\n                    <h4> 도착 지점 목록</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MapPresenter\r\n","import React from 'react'\r\n\r\nfunction RobotStatus({robot}){\r\n    return (\r\n        <li>\r\n            <div> {robot.id}</div>\r\n            <div> {robot.used}</div>\r\n        </li>\r\n    )\r\n}\r\n\r\nfunction CallRobotItem({robotStatus}) {\r\n    // const [paths, setPaths] = useState([ \r\n\r\n    // ]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {robotStatus.map(robot => (\r\n                    <RobotStatus robot={robot} key={robot.id}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CallRobotItem\r\n","import axios from 'axios';\r\naxios.defaults.baseURL = 'http://15.165.182.103:8080/server/src/public';\r\n// axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\r\nexport async function getBackRobot(props) {    //시뮬레이션용. 도착 후 서버에 도착신호를 보낸다.\r\n    // users : user id로 map id user node얻어오기\r\n    // robots : map id로부터 쉬고있는 robot 중에 가장 좋은거 선택\r\n    // maps: map name도 갖고오기\r\n    // console.log(\"toggle \"+props)\r\n    const mapName = props.calledMapName;\r\n    const robotId = props.calledRobot;\r\n    const mapId = props.mapId;\r\n    const response = await axios.get('/controller/button/' + robotId + '/' + mapId);\r\n    console.log(response)\r\n    let error = response.status;\r\n    console.log(\"back error : \"+error);\r\n\r\n    if (error == 200){  // error 안났을때, 200\r\n\r\n        let robotHome = response.data.robot_home;\r\n        let buttonError = postButton([robotHome, mapName, robotId]);\r\n        return [buttonError, robotHome]\r\n        \r\n    }\r\n    else {      //error일때, 즉 response.state가 201 또는 400일때\r\n        alert(\"로봇이 이동중입니다. 도착 후 버튼을 클릭하세요.\");\r\n        return [error, response.data.message];\r\n    }\r\n\r\n}\r\nexport async function getCallRobot(userId) {    //시뮬레이션용. 도착 후 서버에 도착신호를 보낸다.\r\n\r\n    // users : user id로 map id user node얻어오기\r\n    // robots : map id로부터 쉬고있는 robot 중에 가장 좋은거 선택\r\n    // maps: map name도 갖고오기\r\n    console.log(\"call : /controller/button/\" + userId);\r\n\r\n//방법1\r\n    try{\r\n        const response = await  axios.get('/controller/button/' + userId);\r\n        let error = response.data.error;\r\n        console.log(\"call error : \"+error);\r\n    \r\n        if (error){ //error일때, 즉 response.state가 201 또는 400일때\r\n            alert(response.data.message);\r\n            return [error, 0, response.data.message]\r\n        }\r\n        else {  // error 안났을때, 200\r\n            let robotId = response.data.robot_id;\r\n            let userNode = response.data.user_node;\r\n            let mapName = response.data.map_name;\r\n            let buttonError = postButton([userNode, mapName, robotId]);\r\n            return [buttonError, robotId, mapName];\r\n        }\r\n    } catch (e) {\r\n        alert(\"호출 가능한 로봇이 없습니다. 기다려주세요.\\n\"+e.message);\r\n            return [true, 0, e.message]\r\n    }\r\n\r\n\r\n}\r\nfunction postButton(params) {\r\n    console.log(\"param \",params);\r\n\r\n    const response = axios({\r\n        method: 'post',\r\n        url : '/mqtt/button',\r\n        data : {\r\n            caller_name : params[0],\r\n            map_name : params[1],\r\n            robot_id : params[2]\r\n        }\r\n    });\r\n    console.log(\"button \"+response);\r\n    // let error = response.data.error\r\n    // console.log(\"button \"+error)\r\n    return false;\r\n}\r\n\r\n\r\n\r\nexport async function GetRobotStatus(mapId) {\r\n\r\n    const response = await  axios.get('/controller/robot/status/' + mapId);\r\n    let robotList = response.data.robot_status;\r\n    console.log(\"GetRobotStatus \",mapId, robotList);\r\n\r\n    return robotList;\r\n}","import React, { Component } from 'react';\r\nimport CallRobotItem from './CallRobotItem';\r\nimport {getBackRobot, getCallRobot} from './CallController';\r\nexport class CallPresenter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        // const userId = sessionStorage.getItem('userId');\r\n        // const mapId = sessionStorage.getItem('mapId');\r\n        // const userName = sessionStorage.getItem('userName');\r\n        // console.log(userId);\r\n        this.state = {\r\n            isCall: false,\r\n            calledRobot: 0,\r\n            mapName : \"\",\r\n            count: 2,\r\n            robotStatus : [\r\n                {id:1, used:\"대기\"},\r\n                {id:2, used:\"맥도날드\"},\r\n                {id:3, used:\"버거킹\"},\r\n                {id:4, used:\"맘스터치\"},\r\n                {id:5, used:\"대기\"},\r\n                {id:6, used:\"롯데리아\"}\r\n            ]\r\n        };\r\n        // this.toggle = this.toggle.bind(this);\r\n\r\n    }\r\n    toggle = async ( userId, mapId, userName) => {\r\n        const isCall = this.state.isCall;\r\n        const count = this.state.count;\r\n        const calledRobot = this.state.calledRobot;\r\n        const calledMapName = this.state.mapName;\r\n\r\n        const change = isCall ? 1 : -1;     //실제 로봇수 아님, 임시 테스트용\r\n\r\n        if (isCall) {   // 픽업대 버튼 눌렀을 때\r\n            let [error, message] = await getBackRobot({mapId, calledRobot, calledMapName});\r\n            console.log(\"error ? back \", message);\r\n\r\n            if (!error){\r\n                this.setState(prevState =>({\r\n                    ...prevState,\r\n                    isCall: !isCall,\r\n                    count: count + change     //실제 로봇수 아님, 임시 테스트용\r\n                }))\r\n            }\r\n        }\r\n        else {   // 호출 버튼 눌렀을 때\r\n            let [error, robotId, mapName] = await getCallRobot(userId);\r\n            console.log(\"error ? call \", error);\r\n            if (!error){\r\n                this.setState(prevState =>({\r\n                    ...prevState,\r\n                    isCall: !isCall,\r\n                    count: count + change,\r\n                    calledRobot :  robotId,\r\n                    mapName: mapName\r\n                }))\r\n            }\r\n        }\r\n       \r\n        // const robotList = await GetRobotStatus(mapId);   변수 처리 공부해서 다시 수정\r\n        // console.log(\"toggle \"+mapId+\" : \"+robotList[0])\r\n        \r\n\r\n\r\n    }\r\n    countRobot = () => {\r\n        \r\n    }\r\n    render() {\r\n        const userId = sessionStorage.getItem('userId');\r\n        const mapId = sessionStorage.getItem('mapId');\r\n        const userName = sessionStorage.getItem('userName');\r\n        const isCall = this.state.isCall\r\n        const count = this.state.count\r\n        const robotStatus = this.state.robotStatus\r\n        // let calledRobot = Object.values(this.state.calledRobot);\r\n        // console.log(\"render \"+robotList)\r\n        ;\r\n\r\n        return (\r\n            <div className=\"content\" id=\"call\">\r\n                <h1 > 로봇 호출</h1>\r\n                <div className=\"grid-container\">\r\n                    <div className=\"grid-item\" id= \"item-button\">\r\n                        <h4>로봇 호출 버튼</h4>\r\n                        <div id=\"calling-map-name\">\r\n                            {userId}의 매장 입니다.\r\n                        </div>\r\n                        <div id=\"called-robot\">\r\n                        {isCall? \r\n                        <div><span>{this.state.calledRobot}</span> 번 로봇 배정 {this.state.mapName}</div>  //state에서 직접 불러옴. render위에서 부르면 왜인지 object뜸\r\n                        :\r\n                        <div> </div>\r\n                        }\r\n                            \r\n                        </div>\r\n                        <button id=\"call-button\" onClick={this.toggle.bind(this, userId, mapId, userName)}>\r\n                            {isCall? \"픽업대\" : \"호출\"}\r\n                            </button>\r\n                    </div>\r\n                    <div className=\"grid-item\" id=\"call-available\">\r\n                        \r\n                        <h4>호출가능 로봇 수</h4>\r\n                        <div>{count}</div>\r\n                    </div>\r\n                    <div className=\"grid-item\" id=\"call-state\">\r\n                        <h4>로봇 상태</h4>\r\n                        <div>\r\n                            <CallRobotItem robotStatus={robotStatus}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CallPresenter\r\n","import React, { Component } from 'react'\r\n\r\nexport class SettingPresenter extends Component {\r\n    onLogout = () => {\r\n        window.sessionStorage.removeItem('userId');\r\n        window.sessionStorage.removeItem('mapId');\r\n\r\n        document.location.href = '/'\r\n\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"content setting\">\r\n                <h1 > 설정</h1>\r\n                <div className=\"grid-container\">\r\n                    <div className=\"grid-item\">\r\n                    설정 페이지입니다\r\n                    </div>\r\n                    <button onClick={this.onLogout.bind(this)}>로그아웃</button>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SettingPresenter\r\n","import React, { Component } from 'react'\r\n\r\nexport class HistoryPresenter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"content history\">\r\n                <h1 > 기록</h1>\r\n                <div className=\"grid-container\">\r\n                    <div className=\"grid-item\">\r\n                        기록 페이지입니다\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HistoryPresenter\r\n","import React from 'react'\r\n\r\nfunction PickupContent({ pickup }) {\r\n    const isNull = pickup.phone === \"\";\r\n    return (\r\n        <li className=\"pickup-item\">\r\n            <div className=\"pickup-number\"> {pickup.id}</div>\r\n            <div className=\"pickup-store\"> {pickup.store}</div>\r\n            <div className=\"pickup-status\">\r\n                {isNull ?\r\n                    <div> 비어있음</div>\r\n                    :\r\n                    <div>\r\n                        <div> 배달 주소 : {pickup.delivery}</div>\r\n                        <div> 연락처 : {pickup.phone}</div>\r\n                        <div> 대기시간 : {pickup.delay}</div>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nfunction PickupItem({pickupList}) {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {pickupList.map(pickupItem => (\r\n                    <PickupContent pickup={pickupItem} key={pickupList.id}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PickupItem\r\n","import React, { Component } from 'react'\r\nimport PickupItem from './PickupItem'\r\nexport class PickupPresenter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            pickupList : [\r\n                {id:1, store:\"대기\", delivery: \"왕십리 한양대 코맥스타운\", phone: \"\", delay:0},\r\n                {id:2, store:\"맥도날드\", delivery: \"왕십리 한양대 코맥스타운\", phone: \"1234\", delay:4},\r\n                {id:3, store:\"버거킹\", delivery: \"왕십리 한양대 코맥스타운\", phone: \"1433\", delay:15},\r\n                {id:4, store:\"맘스터치\", delivery: \"왕십리 한양대 코맥스타운\", phone: \"1134\", delay:3},\r\n                {id:5, store:\"대기\", delivery: \"왕십리 한양대 코맥스타운\", phone: \"\", delay:0},\r\n                {id:6, store:\"롯데리아\", delivery: \"왕십리 한양대 코맥스타운\", phone: \"1424\", delay:2}\r\n            ]\r\n        }\r\n        // this.toggle = this.toggle.bind(this);\r\n\r\n    }\r\n    render() {\r\n        const pickupList = this.state.pickupList\r\n        return (\r\n            <div className=\"content\" id=\"pickup\">\r\n                <h1> 픽업대 현황</h1>\r\n                <div className=\"grid-container\">\r\n                    <div className=\"grid-item\" id=\"item-pickup-list\">\r\n                    <PickupItem pickupList={pickupList}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PickupPresenter\r\n","import React, { useEffect, useState } from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n// import './SideNav.css';\r\nimport './../../assets/style.css';\r\n\r\nfunction SideNavPresenter({isAuthorized}) {\r\n    const menus = [\r\n        { name: \"실시간 로봇위치\", path: \"/map\" },\r\n        { name: \"로봇 호출\", path: \"/call\" },\r\n        { name: \"픽업대 상황\", path: \"/pickup\" },\r\n        { name: \"기록\", path: \"/history\" },\r\n        { name: \"설정\", path: \"/setting\" }\r\n\r\n    ];\r\n\r\n    return (\r\n        <div id=\"side-nav\">\r\n            <div id=\"title\">\r\n                <img src={require(\"../../assets/simbol.png\").default} alt=\"hprobot\" />\r\n                <div>Helper Robotics</div>\r\n            </div>\r\n            {menus.map((menu, idx) => {\r\n                return (\r\n                    <NavLink to={menu.path} key={idx} className=\"nav-item\" activeClassName=\"nav-active\">\r\n                        {menu.name}\r\n                    </NavLink>\r\n                );\r\n            })}\r\n            {isAuthorized ? \r\n            \r\n            <NavLink to='/my-page' id=\"nav-user\">\r\n                        <img src={require(\"../../assets/simbol.png\").default} alt=\"logo\" />\r\n\r\n                {/* userid로 user img url 불러오기 */}\r\n                    {sessionStorage.getItem('userName')} 매장\r\n                </NavLink>\r\n                :\r\n\r\n            <NavLink to='/login' id=\"nav-login\">\r\n            로그인\r\n        </NavLink>\r\n        \r\n        }\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideNavPresenter;\r\n","import './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Login from './component/User/Login';\r\nimport User from './component/User/User';\r\nimport Authorized from './component/User/Authorized';\r\nimport Map from './component/Map/MapPresenter';\r\nimport Call from './component/Call/CallPresenter';\r\nimport Setting from './component/Setting/SettingPresenter';\r\nimport History from './component/History/HistoryPresenter';\r\nimport Pickup from './component/Pickup/PickupPresenter';\r\n\r\nimport SideNav from './component/SideNav/SideNavPresenter';\r\n\r\nimport {  BrowserRouter as Router,  Route,  Redirect,  Switch} from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n\r\n  //로그인 상태 관리\r\n  const [isAuthorized, setIsAuthorized] = useState(false) //로그인 상태. 기본 false\r\n\r\n  useEffect(() => {\r\n    const user = sessionStorage.getItem('mapId')\r\n    if (user == null) {\r\n      // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 없다면\r\n      alert('isLogin ?? no:: ' + isAuthorized)\r\n    } else {\r\n      // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 있다면\r\n      // 로그인 상태 변경\r\n      setIsAuthorized(true)\r\n      alert('isLogin ?? yes:: map ' + user)\r\n    }\r\n  })\r\n\r\n\r\n  return (\r\n    <div className=\"web-container\">\r\n      <Router>\r\n        <div className=\"web-side-nav\">\r\n          <SideNav isAuthorized={isAuthorized}/>\r\n        </div>\r\n        <div className=\"web-content\">\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n\r\n              {!isAuthorized ? <Login /> : <Setting />}\r\n            </Route>\r\n            <Route path=\"/map\" exact>\r\n              {!isAuthorized ? < Authorized /> : <Map />}\r\n            </Route>\r\n            <Route path=\"/call\" exact>\r\n              {!isAuthorized ? < Authorized /> : <Call />}\r\n            </Route>\r\n            <Route path=\"/pickup\" exact>\r\n              {!isAuthorized ? < Authorized /> : <Pickup />}\r\n            </Route>\r\n            <Route path=\"/history\" exact>\r\n              {!isAuthorized ? < Authorized /> : <History />}\r\n            </Route>\r\n            <Route path=\"/setting\" exact>\r\n              <Setting />\r\n            </Route>\r\n            <Route path=\"/login\" exact>\r\n              < Login />\r\n            </Route>\r\n            <Route path=\"/my-page\" exact>\r\n              < User />\r\n            </Route>\r\n\r\n            <Redirect to=\"/\" />\r\n            {/* 주어지지 않은 url은 home으로 자동 이동 */}\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}